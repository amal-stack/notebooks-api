# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
permissions: 
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
          
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 18
      uses: actions/setup-java@v4
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      env:
        SPRING_PROFILES_ACTIVE: ghactions
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USERNAME: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DATABASE: postgres
    
    - name: Maven Dependency Tree Dependency Submission
      uses: advanced-security/maven-dependency-submission-action@v3.0.3
      with:
        ignore-maven-wrapper: true
        

        

